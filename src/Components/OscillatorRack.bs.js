// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as List from "bs-platform/lib/es6/list.js";
import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as OscillatorUnit$WebAudio from "./OscillatorUnit.bs.js";
import * as AppContextProvider$WebAudio from "./AppContextProvider.bs.js";

function OscillatorRack(Props) {
  var appContext = React.useContext(AppContextProvider$WebAudio.appContext);
  var match = React.useState((function () {
          return 1;
        }));
  var setOscillatorIndex = match[1];
  var oscillatorIndex = match[0];
  var match$1 = React.useState((function () {
          return /* :: */[
                  1,
                  /* [] */0
                ];
        }));
  var setOscillators = match$1[1];
  var oscillators = match$1[0];
  var removeOscillator = React.useCallback((function (osc) {
          return (function (param) {
              return Curry._1(setOscillators, (function (oList) {
                            return List.filter((function (o) {
                                            return o !== osc;
                                          }))(oList);
                          }));
            });
        }), ([]));
  var match$2 = appContext.lfoOutputGain;
  var tmp;
  if (match$2 !== undefined) {
    var outputGain = Caml_option.valFromOption(match$2);
    tmp = $$Array.of_list(List.map((function (osc) {
                return React.createElement(OscillatorUnit$WebAudio.make, {
                            name: "OSCILLATOR " + String(osc),
                            targetOutput: Caml_option.some(outputGain),
                            alone: List.length(oscillators) === 1,
                            remove: Curry._1(removeOscillator, osc),
                            key: String(osc)
                          });
              }), oscillators));
  } else {
    tmp = null;
  }
  return React.createElement("div", undefined, React.createElement("button", {
                  className: "unit-container",
                  onClick: (function (param) {
                      Curry._1(setOscillators, (function (oList) {
                              return /* :: */[
                                      oscillatorIndex + 1 | 0,
                                      oList
                                    ];
                            }));
                      return Curry._1(setOscillatorIndex, (function (idx) {
                                    return idx + 1 | 0;
                                  }));
                    })
                }, "Add Oscillator"), React.createElement("div", undefined, tmp));
}

var make = OscillatorRack;

export {
  make ,
  
}
/* react Not a pure module */
