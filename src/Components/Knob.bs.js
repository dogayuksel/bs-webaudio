// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";

function sizeInPixels(x) {
  return String(x) + "px";
}

function Knob(Props) {
  var name = Props.name;
  var param = Props.param;
  var mapValueToDegrees = function (value) {
    return (Math.log10(value) * 60.0).toString() + "deg";
  };
  var match = React.useState((function () {
          return param.value;
        }));
  var setValue = match[1];
  var value = match[0];
  var match$1 = React.useState((function () {
          return 0;
        }));
  var setPreviousY = match$1[1];
  var previousY = match$1[0];
  var match$2 = React.useState((function () {
          return 0;
        }));
  var setNextY = match$2[1];
  var nextY = match$2[0];
  React.useEffect((function (param$1) {
          var newValue = value + (previousY - nextY | 0);
          param.value = newValue;
          Curry._1(setValue, (function (param) {
                  return newValue;
                }));
          Curry._1(setPreviousY, (function (param) {
                  return nextY;
                }));
          return ;
        }), /* tuple */[
        value,
        previousY,
        nextY
      ]);
  var handleMouseMove = function ($$event) {
    var clientY = $$event.clientY;
    Curry._1(setNextY, (function (param) {
            return clientY;
          }));
    return /* () */0;
  };
  var handleMouseUp = function (param) {
    document.removeEventListener("mousemove", handleMouseMove);
    return /* () */0;
  };
  var handleMouseDown = function ($$event) {
    var clientY = $$event.clientY;
    Curry._1(setNextY, (function (param) {
            return clientY;
          }));
    Curry._1(setPreviousY, (function (param) {
            return clientY;
          }));
    document.addEventListener("mousemove", handleMouseMove);
    document.addEventListener("mouseup", handleMouseUp, {
          capture: false,
          once: true,
          passive: true
        });
    return /* () */0;
  };
  return React.createElement("div", {
              style: {
                fontFamily: "sans-serif",
                padding: "10px",
                width: String(140) + "px"
              }
            }, React.createElement("div", {
                  style: {
                    backgroundColor: "#839264",
                    display: "flex",
                    height: String(120) + "px",
                    margin: "10px",
                    width: String(120) + "px",
                    borderRadius: String(120) + "px",
                    justifyContent: "center",
                    transform: "rotate(" + (mapValueToDegrees(value) + ")")
                  },
                  onMouseDown: handleMouseDown
                }, React.createElement("div", {
                      style: {
                        borderRight: "10px solid transparent",
                        borderBottom: "10px solid black",
                        borderLeft: "10px solid transparent",
                        height: "0",
                        width: "0"
                      }
                    })), React.createElement("div", {
                  style: {
                    display: "flex",
                    justifyContent: "center"
                  }
                }, name + ": ", value.toString()));
}

var size = 120;

var make = Knob;

export {
  size ,
  sizeInPixels ,
  make ,
  
}
/* react Not a pure module */
