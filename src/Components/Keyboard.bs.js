// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as List from "bs-platform/lib/es6/list.js";
import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Caml_array from "bs-platform/lib/es6/caml_array.js";
import * as Switch$WebAudio from "./Switch.bs.js";
import * as Envelope$WebAudio from "../Envelope/Envelope.bs.js";
import * as ColorPalette$WebAudio from "../ColorPalette.bs.js";
import * as AppContextProvider$WebAudio from "./AppContextProvider.bs.js";

function Keyboard(Props) {
  var appContext = React.useContext(AppContextProvider$WebAudio.appContext);
  var match = React.useState((function () {
          return Caml_array.caml_make_vect(8, false);
        }));
  var setSequencer = match[1];
  var sequencer = match[0];
  var match$1 = React.useState((function () {
          return false;
        }));
  var setSequencerOn = match$1[1];
  var sequencerOn = match$1[0];
  var match$2 = React.useState((function () {
          return 0;
        }));
  var setActiveStep = match$2[1];
  var match$3 = React.useState((function () {
          return false;
        }));
  var setKeyPress = match$3[1];
  var toggleSequencerOn = function (param) {
    return Curry._1(setSequencerOn, (function (isOn) {
                  if (isOn === true) {
                    Curry._1(setActiveStep, (function (param) {
                            return 0;
                          }));
                    return false;
                  } else {
                    return true;
                  }
                }));
  };
  var trigger = function (e) {
    if (e.key === "a") {
      return Curry._1(setKeyPress, (function (key) {
                    if (key === false) {
                      List.iter(Envelope$WebAudio.trigger, appContext.triggerTargets);
                      return true;
                    } else {
                      return true;
                    }
                  }));
    } else {
      return 0;
    }
  };
  var endTrigger = function (e) {
    if (e.key === "a") {
      return Curry._1(setKeyPress, (function (param) {
                    List.iter(Envelope$WebAudio.endTrigger, appContext.triggerTargets);
                    return false;
                  }));
    } else {
      return 0;
    }
  };
  React.useEffect((function () {
          document.addEventListener("keydown", trigger);
          document.addEventListener("keyup", endTrigger);
          return (function (param) {
                    document.removeEventListener("keydown", trigger);
                    document.removeEventListener("keydown", endTrigger);
                    return /* () */0;
                  });
        }), /* array */[appContext.triggerTargets]);
  React.useEffect((function () {
          if (sequencerOn === true) {
            var interval = setInterval((function (param) {
                    List.iter(Envelope$WebAudio.trigger, appContext.triggerTargets);
                    setTimeout((function (param) {
                            return List.iter(Envelope$WebAudio.endTrigger, appContext.triggerTargets);
                          }), 120);
                    return /* () */0;
                  }), 500);
            return (function (param) {
                      clearInterval(interval);
                      return /* () */0;
                    });
          }
          
        }), /* tuple */[
        sequencerOn,
        sequencer
      ]);
  return React.createElement("div", {
              className: "unit-group-container"
            }, React.createElement("h2", {
                  className: "unit-label"
                }, "SEQUENCER"), React.createElement("div", {
                  className: "row-group-container"
                }, React.createElement("div", {
                      className: "unit-container"
                    }, React.createElement(Switch$WebAudio.make, {
                          isOn: sequencerOn,
                          toggle: toggleSequencerOn,
                          children: "START"
                        })), React.createElement("div", {
                      className: "unit-container"
                    }, $$Array.mapi((function (ind, value) {
                            return React.createElement("div", {
                                        key: String(ind),
                                        style: {
                                          backgroundColor: value ? ColorPalette$WebAudio.black : ColorPalette$WebAudio.white,
                                          display: "inline-block",
                                          height: "50px",
                                          margin: "5px",
                                          width: "40px"
                                        },
                                        onClick: (function (param) {
                                            var index = ind;
                                            return Curry._1(setSequencer, (function (s) {
                                                          Caml_array.caml_array_set(s, index, !Caml_array.caml_array_get(s, index));
                                                          return $$Array.copy(s);
                                                        }));
                                          })
                                      });
                          }), sequencer))));
}

var make = Keyboard;

export {
  make ,
  
}
/* react Not a pure module */
