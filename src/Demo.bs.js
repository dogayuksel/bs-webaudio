// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Pervasives from "bs-platform/lib/es6/pervasives.js";
import * as ReactDOMRe from "reason-react/src/ReactDOMRe.js";
import * as LFO$WebAudio from "./LFO/LFO.bs.js";
import * as Knob$WebAudio from "./Components/Knob.bs.js";
import * as Envelope$WebAudio from "./Envelope/Envelope.bs.js";
import * as Oscillator$WebAudio from "./Oscillator/Oscillator.bs.js";
import * as BiquadFilterNode$WebAudio from "./WebAudio/BiquadFilterNode.bs.js";

var audioCtx = new AudioContext();

var lfo = LFO$WebAudio.connect(audioCtx.destination, LFO$WebAudio.setFrequency(10.0, LFO$WebAudio.make(audioCtx)));

var oscOneEnvelope = Envelope$WebAudio.connect(lfo.lfoGain, Envelope$WebAudio.make(audioCtx));

var oscOne = Oscillator$WebAudio.start(Oscillator$WebAudio.connect(oscOneEnvelope.envelopeGain, Oscillator$WebAudio.make(/* Sine */0, audioCtx)));

var oscTwoEnvelope = Envelope$WebAudio.connect(lfo.lfoGain, Envelope$WebAudio.make(audioCtx));

var oscTwoFilter = audioCtx.createBiquadFilter();

BiquadFilterNode$WebAudio.setType(oscTwoFilter, /* Lowpass */0);

oscTwoFilter.frequency.value = 370.0;

oscTwoFilter.frequency.setTargetAtTime(300.0, 2.0, 3.0);

oscTwoFilter.connect(oscTwoEnvelope.envelopeGain);

var oscTwo = Oscillator$WebAudio.start(Oscillator$WebAudio.connect(oscTwoFilter, Oscillator$WebAudio.make(/* Sine */0, audioCtx)));

var state = {
  a: false
};

var Keyboard = {
  state: state
};

function trigger(e) {
  if (state.a === false && e.key === "a") {
    state.a = true;
    Envelope$WebAudio.trigger(oscOneEnvelope);
    return Envelope$WebAudio.trigger(oscTwoEnvelope);
  } else {
    return 0;
  }
}

function endTrigger(e) {
  if (e.key === "a") {
    state.a = false;
    Envelope$WebAudio.endTrigger(oscOneEnvelope);
    return Envelope$WebAudio.endTrigger(oscTwoEnvelope);
  } else {
    return 0;
  }
}

document.addEventListener("keydown", trigger);

document.addEventListener("keyup", endTrigger);

ReactDOMRe.renderToElementWithId(React.createElement(React.Fragment, undefined, React.createElement("div", undefined, React.createElement("div", undefined, "Oscillator One"), React.createElement("div", undefined, React.createElement(Knob$WebAudio.make, {
                      name: "Frequency",
                      param: Oscillator$WebAudio.getFrequency(oscOne),
                      config: {
                        minValue: 1.0,
                        maxValue: 18000.0,
                        scale: /* Logarithmic */1
                      }
                    }), React.createElement(Knob$WebAudio.make, {
                      name: "Gain",
                      param: Oscillator$WebAudio.getGain(oscOne),
                      config: {
                        minValue: Pervasives.epsilon_float,
                        maxValue: 100.0,
                        scale: /* Linear */0
                      }
                    }))), React.createElement("div", undefined, React.createElement("div", undefined, "Oscillator Two"), React.createElement("div", undefined, React.createElement(Knob$WebAudio.make, {
                      name: "Frequency",
                      param: Oscillator$WebAudio.getFrequency(oscTwo),
                      config: {
                        minValue: 1.0,
                        maxValue: 18000.0,
                        scale: /* Logarithmic */1
                      }
                    }), React.createElement(Knob$WebAudio.make, {
                      name: "Gain",
                      param: Oscillator$WebAudio.getGain(oscTwo),
                      config: {
                        minValue: Pervasives.epsilon_float,
                        maxValue: 100.0,
                        scale: /* Linear */0
                      }
                    })))), "app");

export {
  audioCtx ,
  lfo ,
  oscOneEnvelope ,
  oscOne ,
  oscTwoEnvelope ,
  oscTwoFilter ,
  oscTwo ,
  Keyboard ,
  trigger ,
  endTrigger ,
  
}
/* audioCtx Not a pure module */
