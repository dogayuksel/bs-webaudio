// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var BiquadFilterNode$WebAudio = require("./WebAudio/BiquadFilterNode.bs.js");

var audioCtx = new AudioContext();

var oscillator = audioCtx.createOscillator();

var biquadFilter = audioCtx.createBiquadFilter();

var gain = audioCtx.createGain();

var real = new Float32Array(3);

var imag = new Float32Array(3);

real[0] = 0.0;

real[1] = 1.0;

real[2] = 0.3;

imag[0] = 0.0;

imag[1] = 0.0;

imag[2] = 0.0;

var periodicWave = audioCtx.createPeriodicWave(real, imag, {
      disableNormalization: false
    });

oscillator.setPeriodicWave(periodicWave);

oscillator.connect(biquadFilter);

BiquadFilterNode$WebAudio.setType(biquadFilter, /* Lowpass */0);

biquadFilter.connect(gain);

gain.connect(audioCtx.destination);

oscillator.start();

oscillator.stop(4.5);

oscillator.frequency.setValueCurveAtTime(/* array */[
      240.0,
      370.0,
      240.0
    ], 2.0, 2.5);

biquadFilter.frequency.value = 170.0;

biquadFilter.frequency.setTargetAtTime(50.0, 2.0, 1.0);

exports.audioCtx = audioCtx;
exports.oscillator = oscillator;
exports.biquadFilter = biquadFilter;
exports.gain = gain;
exports.real = real;
exports.imag = imag;
exports.periodicWave = periodicWave;
/* audioCtx Not a pure module */
